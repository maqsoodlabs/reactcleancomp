{"version":3,"sources":["components/Pokemon.js","components/InputField.js","components/UserList.js","components/DataForm.js","App.js","index.js"],"names":["Pokemon","useState","id","name","weight","pokemon","setPokemon","useEffect","a","axios","method","url","then","res","console","log","data","catch","err","callPikchu","Card","style","textAlign","bg","InputField","updateHandler","userName","setUserName","Form","Control","type","placeholder","onChange","e","target","value","UserList","props","user","length","ListGroup","marginTop","map","item","index","Item","key","variant","DataForm","userList","setUserList","useRef","willUnmount","width","padding","fontWeight","marginBottom","Row","Group","controlId","Label","val","current","Button","onClick","preventDefault","temp","push","App","toggle","setToggle","className","display","justifyContent","flexDirection","alignItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d606c5a8.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Card } from \"react-bootstrap\";\n\nconst Pokemon = () => {\n  const BASEURL = \"https://pokeapi.co/api/v2/pokemon/25/\";\n  const [pokemon, setPokemon] = useState({ id: \"\", name: \"\", weight: \"\" });\n\n  useEffect(() => {\n    const callPikchu = async () => {\n      return axios({\n        method: \"GET\",\n        url: BASEURL,\n      })\n        .then((res) => {\n          console.log(\"response is : \", res.data);\n          setPokemon({\n            id: res.data.id,\n            name: res.data.name,\n            weight: res.data.weight,\n          });\n        })\n        .catch((err) => {\n          console.log(\"error occured \", err);\n        });\n    };\n\n    callPikchu();\n  }, []);\n\n  return (\n    <div>\n      <Card style={{ textAlign: \"center\" }} bg=\"warning\">\n        ID : {pokemon.id}, Name : {pokemon.name}, Weight : {pokemon.weight}\n      </Card>\n    </div>\n  );\n};\n\nexport default Pokemon;\n","import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst InputField = ({ updateHandler }) => {\n  const [userName, setUserName] = useState(\"\");\n\n  const handleUserName = (e) => {\n    updateHandler(e.target.value);\n    setUserName(e.target.value);\n  };\n  return (\n    <div>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter your name\"\n        onChange={handleUserName}\n        value={userName}\n      />\n    </div>\n  );\n};\n\nexport default InputField;\n","import React from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\n\nconst UserList = (props) => {\n  const { user } = props;\n  console.log(\"user is \", user);\n  return (\n    <div>\n      {user.length ? (\n        <ListGroup style={{ marginTop: \"10px\" }}>\n          {user.map((item, index) => {\n            return (\n              <ListGroup.Item key={index} variant=\"success\">\n                name : {item}\n              </ListGroup.Item>\n            );\n          })}\n        </ListGroup>\n      ) : null}\n    </div>\n  );\n};\n\nexport default UserList;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Card, Form, Button, Row, Col } from \"react-bootstrap\";\nimport Pokemon from \"./Pokemon\";\nimport InputField from \"./InputField\";\nimport UserList from \"./UserList\";\n\nconst DataForm = () => {\n  const [userList, setUserList] = useState([]);\n  const userName = useRef();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (userName.current) {\n      let temp = userList;\n      temp.push(userName.current);\n      setUserList(temp);\n    } else {\n      console.log(\"Add some value\");\n    }\n  };\n\n  const willUnmount = () => {\n    console.log(\"Component unmount called\");\n  };\n\n  useEffect(() => {\n    console.log(\"Data form useEffect\");\n    return willUnmount;\n  }, []);\n\n  return (\n    <Card style={{ width: \"30rem\", padding: \"20px\" }}>\n      <h2\n        style={{\n          textAlign: \"center\",\n          fontWeight: \"bold\",\n          marginBottom: \"40px\",\n        }}\n      >\n        FORM\n      </h2>\n      <Form>\n        <Row></Row>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label style={{ fontWeight: \"bold\" }}>User Name</Form.Label>\n          <InputField updateHandler={(val) => (userName.current = val)} />\n          <UserList user={userList} />\n        </Form.Group>\n\n        <Button type=\"submit\" style={{ width: \"100%\" }} onClick={handleSubmit}>\n          Add\n        </Button>\n      </Form>\n\n      <h2\n        style={{\n          textAlign: \"center\",\n          fontWeight: \"bold\",\n          marginTop: \"40px\",\n        }}\n      >\n        Favourite Pokemon\n      </h2>\n      <Card style={{ marginTop: \"20px\" }}>\n        <Pokemon />\n      </Card>\n    </Card>\n  );\n};\n\nexport default DataForm;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport DataForm from \"./components/DataForm\";\nimport { Button } from \"react-bootstrap\";\n\nfunction App() {\n  const [toggle, setToggle] = useState(false);\n  return (\n    <div\n      className=\"App\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <Button\n        style={{ width: \"25rem\", marginTop: \"10px\", marginBottom: \"50px\" }}\n        onClick={() => setToggle(!toggle)}\n        variant={toggle ? \"danger\" : \"success\"}\n      >\n        {toggle ? \"Hide Form \" : \"Show Form\"}\n      </Button>\n      {toggle ? <DataForm /> : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}